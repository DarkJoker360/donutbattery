#!/usr/bin/env bash

#
# SPDX-License-Identifier: GPL-3.0
#

version=1.2

psdir="/sys/class/power_supply"

usage() {
    printf "    Usage: donutbattery

    Donutbattery is a cli tool written in bash showing battery informations.

    OPTIONS
        -v | --version : Shows donutbattery version\n"
}

detect_device(){
    # TODO: Handle properly device detection.
    adb devices && (adb root || adb shell su -c test ls) || return 0
    device_oem=$(adb shell getprop ro.product.vendor.manufacturer)
    return 1
}

print_infos(){
    if [ $(ls /sys/class/power_supply/ | grep BAT) == "" ]; then
        echo "There is no battery plugged in !"
        exit 1
    fi

    is_wsl=false
    for device in $(ls /sys/class/power_supply/ | grep BAT)
    do
        bat_dir="$psdir/$device"
        manufacturer="$bat_dir"/manufacturer
        model="$bat_dir"/model_name

        if [[ $(cat $model) == "Microsoft Hyper-V Virtual BatterVirtual" ]]; then
            is_wsl=true
        fi

        case $(cat $manufacturer) in
            "ASUSTeK")
                status="$bat_dir"/status
                capacity="$bat_dir"/capacity
                cycles="$bat_dir"/cycle_count
                tech="$bat_dir"/technology
                curr_capacity="$bat_dir"/energy_now
                fullcharge_capacity="$bat_dir"/energy_full
                designed_capacity="$bat_dir"/energy_full_design
                voltage="$bat_dir"/voltage_now
                designed_voltage="$bat_dir"/voltage_min_design
                ;;
            "Notebook" | "SANYO")
                status="$bat_dir"/status
                capacity="$bat_dir"/capacity
                cycles="$bat_dir"/cycle_count
                tech="$bat_dir"/technology
                curr_capacity="$bat_dir"/charge_now
                fullcharge_capacity="$bat_dir"/charge_full
                designed_capacity="$bat_dir"/charge_full_design
                voltage="$bat_dir"/voltage_now
                designed_voltage="$bat_dir"/voltage_min_design
                ;;
            * )
                status="$bat_dir"/status
                capacity="$bat_dir"/capacity
                cycles="$bat_dir"/cycle_count
                tech="$bat_dir"/technology
                curr_capacity="$bat_dir"/energy_now
                fullcharge_capacity="$bat_dir"/energy_full
                designed_capacity="$bat_dir"/energy_full_design
                voltage="$bat_dir"/voltage_now
                designed_voltage="$bat_dir"/voltage_min_design
                ;;
        esac

        battery_health=$(awk "BEGIN { pc=100*$(cat "$fullcharge_capacity")/$(cat "$designed_capacity"); i=int(pc); print (pc-i<0.5)?i:i+1 }")

        echo "*********** $(cat $model) ***********"
        echo "Device: $device"
        [ $is_wsl == false ] && echo "Manufacturer: $(cat $manufacturer)"
        echo "Status: $(cat $status)"
        echo "Level: $(cat $capacity)%"
        [ $is_wsl == false ] && echo "Health: $battery_health%"
        [ $is_wsl == false ] && echo "Cycles: $(cat $cycles)"
        [ $is_wsl == false ] && echo "Technology: $(cat $tech)"
        [ $is_wsl == false ] && echo "Current capacity: $(cat $curr_capacity)µWh"
        [ $is_wsl == false ] && echo "Full charge capacity: $(cat $fullcharge_capacity)µWh"
        [ $is_wsl == false ] && echo "Designed capacity: $(cat $designed_capacity)µWh"
        [ $is_wsl == false ] && echo "Voltage: $(cat $voltage)µV"
        [ $is_wsl == false ] && echo "Designed voltage: $(cat $designed_voltage)µV"
        echo "************************************"
    done
}

print_device_infos(){
    echo "********* $name *********"
    echo "Manufacturer: $device_oem"
    [ $status == ""] || echo "Status: $status"
    [ $level == ""] || echo "Level: $level%"
    [ $cycles == ""] || echo "Cycles: $cycles"
    [ $battery_health == ""] || echo "Health: $battery_health%"
    [ $health == ""] || echo "Health status: $health"
    [ $tect == ""] || echo "Technology: $tech"
    [ $fc_cap == ""] || echo "Full charge capacity: $fc_capµWh"
    [ $d_cap == ""] || echo "Designed capacity: $d_capµWh"
    [ $v == ""] || echo "Voltage: $vµV"
    echo "************************************"
}

read_device_nodes() {
    bat_dir="$psdir/battery"
    bms_dir="$psdir/bms"
    name=$(adb shell getprop ro.product.vendor.model)
    case $device_oem in
        "Xiaomi")
            status=$(adb shell cat "$bat_dir"/status)
            level=$(adb shell cat "$bat_dir"/capacity)
            cycles=$(adb shell cat "$bms_dir"/cycle_count)
            health=$(adb shell cat "$bat_dir"/health)
            tech=$(adb shell cat "$bat_dir"/technology)
            fc_cap=$(adb shell cat "$bat_dir"/charge_full)
            d_cap=$(adb shell cat "$bat_dir"/charge_full_design)
            v=$(adb shell cat "$bat_dir"/voltage_now)
            battery_health=$(awk "BEGIN { pc=100*$fc_cap/$d_cap; i=int(pc); print (pc-i<0.5)?i:i+1 }")
            ;;
        "OnePlus")
            name=$(adb shell getprop ro.product.vendor.name)
            status=$(adb shell cat "$bat_dir"/status)
            level=$(adb shell cat "$bat_dir"/capacity)
            cycles=$(adb shell cat "$bat_dir"/cycle_count)
            health=$(adb shell cat "$bat_dir"/health)
            tech=$(adb shell cat "$bat_dir"/technology)
            fc_cap=$(adb shell cat "$bat_dir"/charge_full)
            d_cap=$(adb shell cat "$bat_dir"/charge_full_design)
            v=$(adb shell cat "$bat_dir"/voltage_now)
            battery_health=$(awk "BEGIN { pc=100*($fc_cap*1000)/$d_cap; i=int(pc); print (pc-i<0.5)?i:i+1 }")
            ;;
        "samsung")
            status=$(adb shell cat "$bat_dir"/status)
            level=$(adb shell cat "$bat_dir"/capacity)
            cycles=
            health=$(adb shell cat "$bat_dir"/health)
            tech=$(adb shell cat "$bat_dir"/technology)
            fc_cap=$(adb shell cat "$bat_dir"/charge_full)
            d_cap=$(adb shell cat "$bat_dir"/charge_full_design)
            v=$(adb shell cat "$bat_dir"/voltage_now)
            battery_health=$(awk "BEGIN { pc=100*$fc_cap/$d_cap; i=int(pc); print (pc-i<0.5)?i:i+1 }")
            ;;
        * )
            status=$(adb shell cat "$bat_dir"/status)
            level=$(adb shell cat "$bat_dir"/capacity)
            ;;
    esac
}

case $1 in
    "--help" | "-h")
        usage
        exit 1
        ;;
    "--version" | "-v")
        echo "Donutbattery $version"
        exit 1
        ;;
    "")
        print_infos 2> /dev/null
        detect_device &> /dev/null
        if [ $? == 1 ]; then
            read_device_nodes 2> /dev/null
            print_device_infos 2> /dev/null
        fi
        exit 0
        ;;
esac
